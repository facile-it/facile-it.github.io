<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Open Source on Facile.it Engineering</title>
    <link>https://engineering.facile.it/categories/open-source/</link>
    <description>Recent content in Open Source on Facile.it Engineering</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 18 Oct 2023 17:00:00 +0000</lastBuildDate>
    <atom:link href="https://engineering.facile.it/categories/open-source/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Venerdì Protetto | October edition</title>
      <link>https://engineering.facile.it/blog/eng/v-protetto13-10-2023/</link>
      <pubDate>Wed, 18 Oct 2023 17:00:00 +0000</pubDate>
      <guid>https://engineering.facile.it/blog/eng/v-protetto13-10-2023/</guid>
      <description>&lt;p&gt;This page contains the abstracts of the talks held during the latest Venerdì Protetto on October 13, 2023.&lt;/p&gt;&#xA;&lt;p&gt;Topics:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#machine-learning&#34;&gt;Machine learning&lt;/a&gt; by &lt;a href=&#34;https://it.linkedin.com/in/marica-castaldo-2505b588&#34;&gt;Marica Castaldo&lt;/a&gt; &amp;amp; &lt;a href=&#34;https://it.linkedin.com/in/santolo-tubelli&#34;&gt;Santolo Tubelli&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#open-telemetry&#34;&gt;OpenTelemetry&lt;/a&gt; by &lt;a href=&#34;https://www.linkedin.com/in/stefano-giurgiano-023545150/?originalSubdomain=it&#34;&gt;Stefano Giurgiano&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#second-brain&#34;&gt;Second Brain&lt;/a&gt; by &lt;a href=&#34;https://www.linkedin.com/in/antonello-calamea/&#34;&gt;Antonello Calamea&lt;/a&gt; (freelance)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;The overview of Venerdì Protetto is available &lt;a href=&#34;https://engineering.facile.it/blog/eng/v-protetto/&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Venerdì Protetto | April edition: Backstage, Code revolution, Dynamic forms</title>
      <link>https://engineering.facile.it/blog/eng/v-protetto14-4-2023/</link>
      <pubDate>Fri, 21 Apr 2023 11:02:00 +0000</pubDate>
      <guid>https://engineering.facile.it/blog/eng/v-protetto14-4-2023/</guid>
      <description>&lt;script type=&#34;application/ld+json&#34;&gt;&#xA;{ &#xA;  &#34;@context&#34;: &#34;https://schema.org&#34;, &#xA;  &#34;@type&#34;: &#34;BlogPosting&#34;,&#xA;  &#34;headline&#34;: &#34;Venerdì Protetto | April edition: Backstage, Code revolution, Dynamic forms&#34;,&#xA;  &#34;keywords&#34;: &#34;Backstage, Code revolution, Dynamic forms&#34;, &#xA;  &#34;wordcount&#34;: &#34;637&#34;,&#xA;  &#34;publisher&#34;: &#34;Facile.it Engineering&#34;,&#xA;  &#34;url&#34;: &#34;https://engineering.facile.it/&#34;,&#xA;  &#34;datePublished&#34;: &#34;2023-04-21&#34;,&#xA;  &#34;dateCreated&#34;: &#34;2023-04-21&#34;,&#xA;  &#34;dateModified&#34;: &#34;2023-08-31&#34;,&#xA;  &#34;description&#34;: &#34;Abstracts of the talks held during the Venerdì Protetto on April 14th, 2023&#34;,&#xA;  &#34;articleBody&#34;:&#34;An introduction to Backstage, managing the chaos At the beginning of this year, our engineering teams adopted a new tool: Backstage, an open-source platform for building developer portals created at Spotify. During this Venerdì Protetto, we had the opportunity to host Lee Mills, a member of the Spotify engineering team. Here is a word from our guest: At Spotify, we&#39;ve always believed in the speed and ingenuity that comes from having autonomous development teams. But as we learned firsthand, the faster you grow, the more fragmented and complex your software ecosystem becomes. And then everything slows down again. Introducing Backstage, a developer portal designed to tame the chaos, bring consistency, and do it all while empowering autonomy and you to make decisions. During the talk, we discussed the following points: -   Introduction to Backstage -   Extension points and potential of Backstage -   Invitation to developers to contribute to the project -   Development road map and new intriguing features to expect in future releases &#xA;To learn more about Backstage, visit the official [Backstage website](https://backstage.io/docs/overview/what-is-backstage/ https://backstage.io/docs/overview/what-is-backstage/&#34;). Codebase restructuring with Clean Architecture and NestJS Ensuring code organization and scalability of the software regardless of the framework. If this is your goal, you as well might be interested in the topic of Clean Architecture and its application in the context of software development. In this talk, we learned how the Clean Architecture can be framework-independent and how it has been integrated into server-side applications in Node.js: NestJS. In particular, we explored how the NestJS approach to creating modules, services, and controllers can be used to implement a project structure based on the Clean Architecture. We also discussed how the dependency injection pattern of NestJS can be used to implement greater modularity within the Clean Architecture, allowing better separation of responsibilities and greater testability of the code. To learn more, read one of the articles about this topic: -   [Clean architecture with Nest.js](https://medium.com/@jonathan.pretre91/clean-architecture-with-nestjs-e089cef65045 &#34;https://medium.com/@jonathan.pretre91/clean-architecture-with-nestjs-e089cef65045&#34;) -   [The Clean Architecture](https://blog.cleancoder.com/uncle-bob/2012/08/13/the-clean-architecture.html &#34;https://blog.cleancoder.com/uncle-bob/2012/08/13/the-clean-architecture.html&#34;) -   [The Clean Architecture - Beginner&#39;s Guide](https://betterprogramming.pub/the-clean-architecture-beginners-guide-e4b7058c1165 &#34;https://betterprogramming.pub/the-clean-architecture-beginners-guide-e4b7058c1165&#34;) Using React with in-house libraries Creating a simple yet flexible and powerful form structure is always a topic of interest in front-end development, especially during an intensive rewriting and refactoring of the codebase. In this talk, we learned about a need that emerged during the migration to React.js, carried out by our Gas &amp; Power Team. In that circumstance, the team needed to create a set of forms for the Facile.it internal checkout. The forms had to have several similarities but also some differences, depending on the company and the offer. Rather than having many similar components or one that was too complex, our engineers chose to describe the forms through a unique configuration. They consequently built a component capable of designing the modules according to that unique configuration. For this purpose, they used two libraries of the Facile.it design system: Full Metal UI (FMUI) for layout and design of the form via custom components and Bilden for validation. This approach to creating forms was successfully applied to the internal checkout and the code was imported into a common library. &#xA;The talk included some practical examples of the use of this common library and a mini-workshop during which we had the opportunity to design forms. &#xA;To learn more about this topic, take a look at these resources: - [Customising JSON Forms](https://kukshalkanishka.medium.com/customising-json-forms-7fc75f627fff) - [JSON Forms](https://jsonforms.io/) The overview of Venerdì Protetto is available [here](/categories/protected-fridays).&#34;,&#xA;  &#34;author&#34;: {&#xA;    &#34;@type&#34;: &#34;Person&#34;,&#xA;    &#34;name&#34;: &#34;Ana&#34;&#xA;  }&#xA;}&#xA;&lt;/script&gt;&#xA;&lt;p&gt;This page contains the abstracts of the talks held during the latest Venerdì Protetto on April 14, 2023.&lt;/p&gt;&#xA;&lt;p&gt;Topics:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#backstage&#34;&gt;Backstage&lt;/a&gt; by Lee Mills (Spotify)&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#code-revolution&#34;&gt;Code revolution&lt;/a&gt; by Mirko Urru &amp;amp; Stefano Giurgiano (Facile.it)&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#dynamic-forms&#34;&gt;Dynamic forms&lt;/a&gt; by Giovanni Fiorentino (Facile.it)&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>Puli: Universal Packages for PHP</title>
      <link>https://engineering.facile.it/blog/ita/puli-universal-packages-for-php/</link>
      <pubDate>Tue, 15 Dec 2015 00:00:00 +0000</pubDate>
      <guid>https://engineering.facile.it/blog/ita/puli-universal-packages-for-php/</guid>
      <description>&lt;h2 id=&#34;composer-e-lecosistema-php&#34;&gt;Composer e l&amp;rsquo;ecosistema PHP&lt;/h2&gt;&#xA;&lt;p&gt;L&amp;rsquo;ecosistema PHP è notevolmente cambiato negli ultimi anni grazie all&amp;rsquo;introduzione di &lt;em&gt;Composer&lt;/em&gt;.&#xA;Esso ha definito degli standard per risolvere problemi comuni come l&amp;rsquo;autoloading e la gestione di pacchetti e dipendenze.&#xA;In questi ultimi anni si è assistito ad un proliferare di numerose componenti software riusabili che hanno significativamente modificato le strategie di sviluppo.&lt;/p&gt;&#xA;&lt;p&gt;Nonostante Composer si sia evoluto molto, in alcuni contesti le sue funzionalità risultano essere limitanti e incomplete.&#xA;I framework e i pacchetti più complessi hanno bisogno di una gestione personalizzata delle dipendenze. Generalmente sono necessarie operazioni di configurazione e registrazione. Ciò è specialmente vero per pacchetti core dei framework come i &lt;em&gt;template engines&lt;/em&gt;.&#xA;Composer, inoltre, possiede una cattiva gestione delle risorse non PHP. I file di configurazione devono essere gestiti manualmente oppure è necessario adottare standard strettamente legati a ciascun framework.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Paraunit: test paralleli, Doctrine e le fixture</title>
      <link>https://engineering.facile.it/blog/ita/paraunit/</link>
      <pubDate>Fri, 09 Oct 2015 00:00:00 +0000</pubDate>
      <guid>https://engineering.facile.it/blog/ita/paraunit/</guid>
      <description>&lt;p&gt;&lt;em&gt;Questo articolo è la sintesi di un talk presentato al &lt;a href=&#34;http://2015.symfonyday.it/&#34;&gt;SymfonyDay 2015&lt;/a&gt;; potete trovare le slide &lt;a href=&#34;http://jean85.github.io/slides/2015-10-paraunit-symfonyday/index.html&#34;&gt;qui&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;&#xA;&lt;h4 id=&#34;i-test-e-la-loro-durata&#34;&gt;I test e la loro durata&lt;/h4&gt;&#xA;&lt;p&gt;Sviluppare applicazioni scrivendo &lt;strong&gt;test&lt;/strong&gt; e facendo &lt;a href=&#34;https://it.wikipedia.org/wiki/Test_driven_development&#34;&gt;Test Driven Development&lt;/a&gt; è un&amp;rsquo;ottima pratica, e dà parecchie soddisfazioni. Con l&amp;rsquo;andare del tempo, si fa &lt;strong&gt;crescere la suite di test&lt;/strong&gt; del proprio progetto, cercando di aumentarne la copertura e l&amp;rsquo;efficacia e si scrivono nuovi test corrispondenti alle nuove funzionalità che vengono man mano sviluppate.&lt;/p&gt;</description>
    </item>
    <item>
      <title>WAMP, Web Application Messaging Protocol.. e PHP!</title>
      <link>https://engineering.facile.it/blog/ita/wamp-web-application-messaging-protocol-e-php/</link>
      <pubDate>Mon, 28 Sep 2015 00:00:00 +0000</pubDate>
      <guid>https://engineering.facile.it/blog/ita/wamp-web-application-messaging-protocol-e-php/</guid>
      <description>&lt;p&gt;Dalle notifiche di Facebook ad un tweet stream, da Google Docs ai giochi multiplayer in HTML5, la necessità di uno &lt;strong&gt;scambio dati&lt;/strong&gt; in &lt;strong&gt;due direzioni&lt;/strong&gt;, &lt;strong&gt;efficiente&lt;/strong&gt; e a &lt;strong&gt;bassa latenza&lt;/strong&gt;, ha determinato l’ascesa negli ultimi anni di &lt;strong&gt;soluzioni basate su &#xA;&#xA;    &#xA;        &#xA;    &#xA;&#xA;    &lt;a href=&#34;https://www.websocket.org/&#34; target=&#39;_blank&#39;&gt;WebSocket&lt;/a&gt;&#xA;&#xA;&lt;/strong&gt;.&lt;/p&gt;&#xA;&lt;p&gt;Internet delle cose e web 2.0 trovano oramai sempre &lt;strong&gt;meno spazio&lt;/strong&gt; all’interno del protocollo &lt;strong&gt;HTTP/1&lt;/strong&gt;. Le tecniche di &lt;strong&gt;polling e long polling&lt;/strong&gt;, in voga fino a pochi anni fa, non permettevano di trasmettere in &#xA;&#xA;    &#xA;        &#xA;    &#xA;&#xA;    &lt;a href=&#34;https://it.wikipedia.org/wiki/Duplex&#34; target=&#39;_blank&#39;&gt;full duplex&lt;/a&gt;&#xA;&#xA; (tra server e client) contemporaneamente, erano costrette ad un alto overhead HTTP e richiedevano &lt;strong&gt;diversi sforzi&lt;/strong&gt; per simulare notifiche push server side.&lt;/p&gt;</description>
    </item>
    <item>
      <title>PHP coding standard: PSR-7  HTTP message interfaces</title>
      <link>https://engineering.facile.it/blog/ita/php-fig-standard-psr-7-http-message-interfaces/</link>
      <pubDate>Mon, 23 Mar 2015 00:00:00 +0000</pubDate>
      <guid>https://engineering.facile.it/blog/ita/php-fig-standard-psr-7-http-message-interfaces/</guid>
      <description>&lt;p&gt;Le specifiche PSR-7 descrivono una &lt;a href=&#34;https://github.com/php-fig/fig-standards/blob/master/proposed/http-message.md&#34;&gt;proposta di standardizzazione&lt;/a&gt; delle &lt;strong&gt;interfacce per i messaggi HTTP&lt;/strong&gt;.&lt;/p&gt;&#xA;&lt;p&gt;Come sappiamo, il protocollo HTTP, attraverso le specifiche redatte dal W3C, definisce una serie di regole di comunicazione che vengono implementate dalle applicazioni client e server che lo adottano.&lt;/p&gt;&#xA;&lt;p&gt;A prima vista niente di nuovo sotto il Sole dunque, ma cerchiamo insieme di comprendere l&amp;rsquo;insieme di problematiche che sono al centro di questo nuovo dibattito che riguarda gli standard di codifica del linguaggio PHP.&lt;/p&gt;</description>
    </item>
    <item>
      <title>MySQL has gone away? Come back!</title>
      <link>https://engineering.facile.it/blog/ita/mysql-has-gone-away-come-back/</link>
      <pubDate>Mon, 09 Mar 2015 00:00:00 +0000</pubDate>
      <guid>https://engineering.facile.it/blog/ita/mysql-has-gone-away-come-back/</guid>
      <description>&lt;p&gt;A ben più di uno sviluppatore sarà capitato di incappare nel comune errore &lt;a href=&#34;http://dev.mysql.com/doc/refman/5.5/en/gone-away.html&#34;&gt;&lt;em&gt;MySQL server has gone away!&lt;/em&gt;&lt;/a&gt;, magari seguito da un eccezione lanciata da una delle &lt;a href=&#34;http://php.net/manual/en/book.pdo.php&#34;&gt;&lt;strong&gt;classi PDO&lt;/strong&gt;&lt;/a&gt;, come ad esempio &lt;em&gt;PDOStatement::execute(): Error reading result set&amp;rsquo;s header&lt;/em&gt;.&lt;/p&gt;&#xA;&lt;p&gt;Nella maggior parte dei casi, quando questo avviene in ambiente PHP, siamo connessi in maniera &lt;strong&gt;persistente&lt;/strong&gt; (per fortuna!) ed a causa di una esecuzione &lt;strong&gt;troppo lunga&lt;/strong&gt;, la connessione col server MySQL va in &lt;strong&gt;timeout&lt;/strong&gt;. Lunghi tasks in batch, chiamate a ws non particolarmente rapidi, carichi elevati del server, sono alcuni degli scenari possibili.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
