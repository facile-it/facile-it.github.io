<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Open Source on Facile.it Engineering</title>
    <link>https://engineering.facile.it/categories/open-source/</link>
    <description>Recent content in Open Source on Facile.it Engineering</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 21 Apr 2023 11:02:00 +0000</lastBuildDate>
    
	<atom:link href="https://engineering.facile.it/categories/open-source/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Venerdì Protetto - April 14th 2023</title>
      <link>https://engineering.facile.it/blog/eng/v-protetto14-4-2023/</link>
      <pubDate>Fri, 21 Apr 2023 11:02:00 +0000</pubDate>
      
      <guid>https://engineering.facile.it/blog/eng/v-protetto14-4-2023/</guid>
      <description>This page contains the abstracts of the talks held during the latest Venerdì Protetto on April 14, 2023.
Topics:
 Backstage by Lee Mills (Spotify) Code revolution by Mirko Urru &amp;amp; Stefano Giurgiano (Facile.it) Dynamic forms by Giovanni Fiorentino (Facile.it)  Backstage An introduction to Backstage, managing the chaos by Lee Mills, Spotify
At the beginning of this year, our engineering teams adopted a new tool: Backstage, an open-source platform for building developer portals created at Spotify.</description>
    </item>
    
    <item>
      <title>Puli: Universal Packages for PHP</title>
      <link>https://engineering.facile.it/blog/ita/puli-universal-packages-for-php/</link>
      <pubDate>Tue, 15 Dec 2015 00:00:00 +0000</pubDate>
      
      <guid>https://engineering.facile.it/blog/ita/puli-universal-packages-for-php/</guid>
      <description>Composer e l&amp;rsquo;ecosistema PHP L&amp;rsquo;ecosistema PHP è notevolmente cambiato negli ultimi anni grazie all&amp;rsquo;introduzione di Composer. Esso ha definito degli standard per risolvere problemi comuni come l&amp;rsquo;autoloading e la gestione di pacchetti e dipendenze. In questi ultimi anni si è assistito ad un proliferare di numerose componenti software riusabili che hanno significativamente modificato le strategie di sviluppo.
Nonostante Composer si sia evoluto molto, in alcuni contesti le sue funzionalità risultano essere limitanti e incomplete.</description>
    </item>
    
    <item>
      <title>Paraunit: test paralleli, Doctrine e le fixture</title>
      <link>https://engineering.facile.it/blog/ita/paraunit/</link>
      <pubDate>Fri, 09 Oct 2015 00:00:00 +0000</pubDate>
      
      <guid>https://engineering.facile.it/blog/ita/paraunit/</guid>
      <description>Questo articolo è la sintesi di un talk presentato al SymfonyDay 2015; potete trovare le slide qui.
I test e la loro durata Sviluppare applicazioni scrivendo test e facendo Test Driven Development è un&amp;rsquo;ottima pratica, e dà parecchie soddisfazioni. Con l&amp;rsquo;andare del tempo, si fa crescere la suite di test del proprio progetto, cercando di aumentarne la copertura e l&amp;rsquo;efficacia e si scrivono nuovi test corrispondenti alle nuove funzionalità che vengono man mano sviluppate.</description>
    </item>
    
    <item>
      <title>WAMP, Web Application Messaging Protocol.. e PHP!</title>
      <link>https://engineering.facile.it/blog/ita/wamp-web-application-messaging-protocol-e-php/</link>
      <pubDate>Mon, 28 Sep 2015 00:00:00 +0000</pubDate>
      
      <guid>https://engineering.facile.it/blog/ita/wamp-web-application-messaging-protocol-e-php/</guid>
      <description>Dalle notifiche di Facebook ad un tweet stream, da Google Docs ai giochi multiplayer in HTML5, la necessità di uno scambio dati in due direzioni, efficiente e a bassa latenza, ha determinato l’ascesa negli ultimi anni di soluzioni basate su WebSocket .
Internet delle cose e web 2.0 trovano oramai sempre meno spazio all’interno del protocollo HTTP/1. Le tecniche di polling e long polling, in voga fino a pochi anni fa, non permettevano di trasmettere in full duplex (tra server e client) contemporaneamente, erano costrette ad un alto overhead HTTP e richiedevano diversi sforzi per simulare notifiche push server side.</description>
    </item>
    
    <item>
      <title>PHP coding standard: PSR-7  HTTP message interfaces</title>
      <link>https://engineering.facile.it/blog/ita/php-fig-standard-psr-7-http-message-interfaces/</link>
      <pubDate>Mon, 23 Mar 2015 00:00:00 +0000</pubDate>
      
      <guid>https://engineering.facile.it/blog/ita/php-fig-standard-psr-7-http-message-interfaces/</guid>
      <description>Le specifiche PSR-7 descrivono una proposta di standardizzazione delle interfacce per i messaggi HTTP.
Come sappiamo, il protocollo HTTP, attraverso le specifiche redatte dal W3C, definisce una serie di regole di comunicazione che vengono implementate dalle applicazioni client e server che lo adottano.
A prima vista niente di nuovo sotto il Sole dunque, ma cerchiamo insieme di comprendere l&amp;rsquo;insieme di problematiche che sono al centro di questo nuovo dibattito che riguarda gli standard di codifica del linguaggio PHP.</description>
    </item>
    
    <item>
      <title>MySQL has gone away? Come back!</title>
      <link>https://engineering.facile.it/blog/ita/mysql-has-gone-away-come-back/</link>
      <pubDate>Mon, 09 Mar 2015 00:00:00 +0000</pubDate>
      
      <guid>https://engineering.facile.it/blog/ita/mysql-has-gone-away-come-back/</guid>
      <description>A ben più di uno sviluppatore sarà capitato di incappare nel comune errore MySQL server has gone away!, magari seguito da un eccezione lanciata da una delle classi PDO, come ad esempio PDOStatement::execute(): Error reading result set&amp;rsquo;s header.
Nella maggior parte dei casi, quando questo avviene in ambiente PHP, siamo connessi in maniera persistente (per fortuna!) ed a causa di una esecuzione troppo lunga, la connessione col server MySQL va in timeout.</description>
    </item>
    
  </channel>
</rss>