<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Python on Facile.it Engineering</title>
    <link>https://engineering.facile.it/categories/python/</link>
    <description>Recent content in Python on Facile.it Engineering</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 18 Sep 2023 13:00:00 +0000</lastBuildDate>
    <atom:link href="https://engineering.facile.it/categories/python/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Venerdì Protetto | September edition: Code shipping, Community tools, Quix Streams Library</title>
      <link>https://engineering.facile.it/blog/eng/v-protetto8-9-2023/</link>
      <pubDate>Mon, 18 Sep 2023 13:00:00 +0000</pubDate>
      <guid>https://engineering.facile.it/blog/eng/v-protetto8-9-2023/</guid>
      <description>&lt;head&gt;&#xA;&lt;script type=&#34;application/ld+json&#34;&gt;&#xA;{ &#xA;  &#34;@context&#34;: &#34;https://schema.org&#34;, &#xA;  &#34;@type&#34;: &#34;BlogPosting&#34;,&#xA;  &#34;headline&#34;: &#34;Venerdì Protetto | September edition: Code shipping, Community tools, Quix Streams Library&#34;,&#xA;  &#34;keywords&#34;: &#34;Code shipping, Community tools, Quix Streams Library&#34;, &#xA;  &#34;wordcount&#34;: &#34;512&#34;,&#xA;  &#34;publisher&#34;: &#34;Facile.it Engineering&#34;,&#xA;  &#34;url&#34;: &#34;https://engineering.facile.it/&#34;,&#xA;  &#34;image&#34;: &#34;https://engineering.facile.it/images/social/orange-social-preview.png&#34;,&#xA;  &#34;datePublished&#34;: &#34;2023-09-18&#34;,&#xA;  &#34;dateCreated&#34;: &#34;2023-09-12&#34;,&#xA;  &#34;dateModified&#34;: &#34;2023-09-18&#34;,&#xA;  &#34;description&#34;: &#34;Abstracts of the talks held during the Venerdì Protetto on September 8th, 2023&#34;,&#xA;  &#34;articleBody&#34;: &#34;This page contains the abstracts of the talks held during the latest Venerdì Protetto on September 8, 2023. Topics: Code shipping by Luca Florio (Spotify) Community tools by Giovanni Cardamone Quix Streams Library by Thomas Neubauer (Quix) The overview of Venerdì Protetto is available here. Code Shipping Ship it! From your laptop to production multiple times a day By Luca Florio, Spotify Shipping code We all love to ship our code to production as fast as possible. But how to ensure (well, kind of) that we are not breaking stuff? In the talk, we explored how to implement a CI/CD pipeline to bring the code from our laptops to our servers in the cloud in a safe way. We covered testing, PR review, infrastructure as a code, canary analysis, and all the safeguards that make it hard to take our service down by mistake. Oh, and we need to keep it up and running after we deploy it as well. That is important too, right? Community Tools A place where we can meet By Giovanni Cardamone, Facile.it Community tools Community Tools is an initiative to create a unified community within Facile.it. The key points are improving, having fun, and bringing value to everyone. The initiative focuses on introducing new tools to the company to build a nicer working environment and better integrate into the &#34;Facile lifestyle&#34;. Every community member can make a difference by having a space to communicate and compare with others. Community Tools is also a place to find new stuff and learn from each other&#39;s work. New workflows, programming languages, and methodologies can be experimented with freely and without deadlines to build everything you think is missing. Quix Streams Library A Python-Kafka connector for data-intensive workloads By Thomas Neubauer, Quix Quix Streams Library This talk introduced Quix Streams, an open-source Python library for data-intensive workloads on Kafka. We discussed the unique problems that this library is designed to solve, and how it was shaped by the challenges of building a Kafka-based solution for Formula 1 cars at McLaren— a solution that needed to process a colossal firehose of sensor data coming in at thousands of samples per second. We also explained why we combined a Kafka API approach with a stream processing library and provided developers with a familiar Pandas DataFrame-like interface. We saw the library in action with a sentiment analysis demo. In this demo, we calculated sentiment scores for incoming messages in a demo chap app—all in real-time, using the HuggingFace Transformer&#39;s API. In the end, we connected to Twitter streaming API to send a high volume of data into the pipeline to simulate this use case at scale. We saw how the library can simplify tasks such as: Subscribing to topics and deserializing incoming messages into table rows. Running calculations on a rolling window of messages. Using memory states to apply different functions such as aggregation or filtering. Automatically outputting the results of calculations into downstream topics. Managing state without the hassle of checkpointing and queues. The archive of all Venerdì Protetto talks is available here.&#xA;&#34;,&#xA;  &#34;author&#34;: {&#xA;    &#34;@type&#34;: &#34;Person&#34;,&#xA;    &#34;name&#34;: &#34;Ana&#34;&#xA;  }&#xA;}&#xA;&lt;/script&gt;&#xA;&lt;/head&gt;&#xA;&lt;p&gt;This page contains the abstracts of the talks held during the latest Venerdì Protetto on September 8, 2023.&lt;/p&gt;&#xA;&lt;p&gt;Topics:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#code-shipping&#34;&gt;Code shipping&lt;/a&gt; by &lt;a href=&#34;https://www.linkedin.com/in/elleflorio/&#34;&gt;Luca Florio&lt;/a&gt; (&lt;a href=&#34;https://engineering.atspotify.com/&#34;&gt;Spotify&lt;/a&gt;)&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#community-tools&#34;&gt;Community tools&lt;/a&gt; by &lt;a href=&#34;https://www.linkedin.com/in/giovanni-cardamone-41306973&#34;&gt;Giovanni Cardamone&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#quix-streams-library&#34;&gt;Quix Streams Library&lt;/a&gt; by &lt;a href=&#34;https://www.linkedin.com/in/tom%C3%A1%C5%A1-neubauer-a10bb144/&#34;&gt;Thomas Neubauer&lt;/a&gt; (&lt;a href=&#34;https://quix.io/&#34;&gt;Quix&lt;/a&gt;)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;The overview of Venerdì Protetto is available &lt;a href=&#34;https://engineering.facile.it/blog/eng/v-protetto/&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>WAMP, Web Application Messaging Protocol.. e PHP!</title>
      <link>https://engineering.facile.it/blog/ita/wamp-web-application-messaging-protocol-e-php/</link>
      <pubDate>Mon, 28 Sep 2015 00:00:00 +0000</pubDate>
      <guid>https://engineering.facile.it/blog/ita/wamp-web-application-messaging-protocol-e-php/</guid>
      <description>&lt;p&gt;Dalle notifiche di Facebook ad un tweet stream, da Google Docs ai giochi multiplayer in HTML5, la necessità di uno &lt;strong&gt;scambio dati&lt;/strong&gt; in &lt;strong&gt;due direzioni&lt;/strong&gt;, &lt;strong&gt;efficiente&lt;/strong&gt; e a &lt;strong&gt;bassa latenza&lt;/strong&gt;, ha determinato l’ascesa negli ultimi anni di &lt;strong&gt;soluzioni basate su &#xA;&#xA;    &#xA;        &#xA;    &#xA;&#xA;    &lt;a href=&#34;https://www.websocket.org/&#34; target=&#39;_blank&#39;&gt;WebSocket&lt;/a&gt;&#xA;&#xA;&lt;/strong&gt;.&lt;/p&gt;&#xA;&lt;p&gt;Internet delle cose e web 2.0 trovano oramai sempre &lt;strong&gt;meno spazio&lt;/strong&gt; all’interno del protocollo &lt;strong&gt;HTTP/1&lt;/strong&gt;. Le tecniche di &lt;strong&gt;polling e long polling&lt;/strong&gt;, in voga fino a pochi anni fa, non permettevano di trasmettere in &#xA;&#xA;    &#xA;        &#xA;    &#xA;&#xA;    &lt;a href=&#34;https://it.wikipedia.org/wiki/Duplex&#34; target=&#39;_blank&#39;&gt;full duplex&lt;/a&gt;&#xA;&#xA; (tra server e client) contemporaneamente, erano costrette ad un alto overhead HTTP e richiedevano &lt;strong&gt;diversi sforzi&lt;/strong&gt; per simulare notifiche push server side.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Intelligenza artificiale: algoritmo A*</title>
      <link>https://engineering.facile.it/blog/ita/intelligenza-artificiale-algoritmo-a-star/</link>
      <pubDate>Tue, 12 May 2015 00:00:00 +0000</pubDate>
      <guid>https://engineering.facile.it/blog/ita/intelligenza-artificiale-algoritmo-a-star/</guid>
      <description>&lt;h1 id=&#34;introduzione&#34;&gt;Introduzione&lt;/h1&gt;&#xA;&lt;p&gt;A* è un &lt;a href=&#34;https://it.wikipedia.org/wiki/Algoritmo_di_ricerca&#34;&gt;algoritmo di ricerca&lt;/a&gt; e ottimizzazione basato su grafi. Viene frequentemente impiegato nell&amp;rsquo;&lt;a href=&#34;https://it.wikipedia.org/wiki/Intelligenza_artificiale&#34;&gt;intelligenza artificiale&lt;/a&gt; perché in grado di gestire grafi ampi e&#xA;indeterminati.&lt;/p&gt;&#xA;&lt;p&gt;L&amp;rsquo;algoritmo A* può essere utilizzato per risolvere problemi come: &lt;a href=&#34;https://it.wikipedia.org/wiki/Gioco_del_quindici&#34;&gt;gioco del 15&lt;/a&gt;, percorso minimo, &lt;a href=&#34;https://it.wikipedia.org/wiki/Sudoku&#34;&gt;Sudoku&lt;/a&gt;, &lt;a href=&#34;https://it.wikipedia.org/wiki/Cubo_di_Rubik&#34;&gt;cubo di Rubik&lt;/a&gt;, ecc.&lt;/p&gt;&#xA;&lt;p&gt;In generale, A* può risolvere efficacemente i problemi che soddisfano i requisiti:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;La soluzione è determinata da cambamenti sequenziali di stato rappresentabili con grafi;&lt;/li&gt;&#xA;&lt;li&gt;Il nodo iniziale e il nodo finale devono essere noti. Talvolta è sufficiente conoscere solo le regole che compongono la soluzione (vedi Sudoku);&lt;/li&gt;&#xA;&lt;li&gt;Deve essere noto un &lt;strong&gt;algoritmo euristico&lt;/strong&gt; che &lt;strong&gt;stima&lt;/strong&gt; il costo del percorso tra un nodo qualsiasi e la soluzione.&lt;/li&gt;&#xA;&lt;li&gt;Deve essere sempre noto il costo che separa due nodi adiacenti. (Nella maggioranza dei problemi tale valore è sempre unitario).&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h1 id=&#34;leuristica&#34;&gt;L&amp;rsquo;euristica&lt;/h1&gt;&#xA;&lt;p&gt;L&amp;rsquo;&lt;a href=&#34;https://it.wikipedia.org/wiki/Algoritmo_euristico&#34;&gt;algoritmo euristico&lt;/a&gt; ha il compito di stimare la distanza tra qualsiasi nodo e la soluzione.&#xA;L&amp;rsquo;euristica influenza fortemente i risultati conseguiti da A*. Esso, in particolare, ne determina il tempo complessivo di esecuzione.&#xA;Un algoritmo euristico molto efficace consente ad A* di trovare velocemente la soluzione.&#xA;Nel caso pessimo, una funzione euristica costante, A* diviene un algoritmo di ricerca molto simile a &lt;a href=&#34;https://it.wikipedia.org/wiki/Algoritmo_di_Dijkstra&#34;&gt;Dijkstra&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
