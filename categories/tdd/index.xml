<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>TDD on Facile.it Engineering</title>
    <link>https://engineering.facile.it/categories/tdd/</link>
    <description>Recent content in TDD on Facile.it Engineering</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 16 Mar 2022 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://engineering.facile.it/categories/tdd/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>On Living Documentation</title>
      <link>https://engineering.facile.it/blog/eng/on-living-documentation/</link>
      <pubDate>Wed, 16 Mar 2022 00:00:00 +0000</pubDate>
      
      <guid>https://engineering.facile.it/blog/eng/on-living-documentation/</guid>
      <description>Today I want to talk about living documentation, having just finished the aptly-named book by Cyrille Martraire, Living Documentation: continuous knowledge sharing by design, published by Pearson.
The need for documentation Documentation supplements the knowledge we might not have. Lack of knowledge manifests in:
  Wasted time (finding the missing points or guessing them).
  Biased decisions due to this lack.
  Hint: when you don’t know something, you are usually not aware that you don&amp;rsquo;t know it ;)</description>
    </item>
    
    <item>
      <title>How PHP 7 &amp; TDD helped me sleep better</title>
      <link>https://engineering.facile.it/blog/eng/how-php-7-tdd-helped-me-sleep-better/</link>
      <pubDate>Tue, 07 Jun 2016 00:00:00 +0000</pubDate>
      
      <guid>https://engineering.facile.it/blog/eng/how-php-7-tdd-helped-me-sleep-better/</guid>
      <description>The enemies of programming As many of you will agree with me, sleep deprivation is the enemy of programming.
Maybe we fear only one thing more than that: being interrupted.
[![Why you shouldn&#39;t interrupt a programmer (by Jason Heeris)](/images/how-php-7-tdd-helped-me-sleep-better/interruption.png)](http://heeris.id.au/2013/this-is-why-you-shouldnt-interrupt-a-programmer/) While writing code we have to think really hard, we use complex abstractions, we go through long business workflows and so on&amp;hellip; fatigue and interruptions are the main enemies of those in this line of work.</description>
    </item>
    
    <item>
      <title>Software testing: Coverage vs Efficacia</title>
      <link>https://engineering.facile.it/blog/ita/software-testing-coverage-vs-efficacia/</link>
      <pubDate>Mon, 16 Mar 2015 00:00:00 +0000</pubDate>
      
      <guid>https://engineering.facile.it/blog/ita/software-testing-coverage-vs-efficacia/</guid>
      <description>Controllare il tasso di coverage dei test è un&amp;rsquo;attività frequente tra gli sviluppatori.
Numerosi sono i fattori che hanno reso il code coverage popolare:
 è una metrica facile da comprendere; si misura senza difficoltà; è oggettiva e imparziale; è universale (applicabile a tutti i paradigmi di programmazione).  Ma al di là di questi vantaggi, possiamo affermare che una test suite con un&amp;rsquo;alta percentuale di coverage sia realmente efficace?</description>
    </item>
    
  </channel>
</rss>